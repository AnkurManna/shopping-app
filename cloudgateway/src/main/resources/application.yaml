server:
  port: 9090

spring:
  application:
    name: API-GATEWAY
  config:
    import: configserver:${CONFIG_SERVER_URL:http://localhost:9296}
  cloud:
    gateway:
      routes:
        - id : ORDER-SERVICE
          uri: http://order-service-svc
          predicates:
            - Path=/order/**
          #filters:
          #  - name: CircuitBreaker
          #    args:
          #      name: ORDER-SERVICE
          #      fallbackuri: forward:/orderServiceFallBack
          #  - name: RequestRateLimiter
          #    args:
          #      redis-rate-limiter.replenishRate: 1
          #      redis-rate-limiter.burstCapacity: 1
        - id: PRODUCT-SERVICE
          uri: http://product-service-svc
          predicates:
            - Path=/product/**
          #filters:
          #  - name: CircuitBreaker
          #    args:
          #      name: PRODUCT-SERVICE
          #      fallbackuri: forward:/productServiceFallBack
          #  - name: RequestRateLimiter
          #    args:
          #      redis-rate-limiter.replenishRate: 1
          #      redis-rate-limiter.burstCapacity: 1
        - id: PAYMENT-SERVICE
          uri: http://payment-service-svc
          predicates:
            - Path=/payment/**
          #filters:
          #  - name: CircuitBreaker
          #    args:
          #      name: PAYMENT-SERVICE
          #      fallbackuri: forward:/paymentServiceFallBack
          #  - name: RequestRateLimiter
          #    args:
          #      redis-rate-limiter.replenishRate: 1
          #      redis-rate-limiter.burstCapacity: 1

okta:
  oauth2:
    issuer: ${okta_issuer}
    audience: api://default
    client-id: ${okta_client_id}
    client-secret: ${okta_client_secret}
    scopes: openid,profile,email,offline_access

#provide okta_issuer,okta_client_id,okta_client_secret in run environment